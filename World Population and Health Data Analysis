{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/faizalrosyid/world-population-code-dataset?scriptVersionId=218727864\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"892dd40c","metadata":{"papermill":{"duration":0.002512,"end_time":"2025-01-22T08:10:52.700264","exception":false,"start_time":"2025-01-22T08:10:52.697752","status":"completed"},"tags":[]},"source":["# World Population and Health Data Analysis\n","## Step 1: Load the Datasets\n","The script begins by importing the required library, pandas, for data manipulation and analysis. Two datasets are loaded:\n","\n","* Population Data: Contains population statistics from 2014 to 2024 for various countries.\n","* Health Data: Contains health-related indicators for multiple countries over several years.\n","\n","The datasets are loaded using pd.read_csv() and inspected with .head() to ensure the data structure is correctly loaded."]},{"cell_type":"code","execution_count":1,"id":"73994106","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-01-22T08:10:52.705634Z","iopub.status.busy":"2025-01-22T08:10:52.705342Z","iopub.status.idle":"2025-01-22T08:10:53.491635Z","shell.execute_reply":"2025-01-22T08:10:53.4906Z"},"papermill":{"duration":0.790562,"end_time":"2025-01-22T08:10:53.493078","exception":false,"start_time":"2025-01-22T08:10:52.702516","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]},{"data":{"text/plain":["(        Entity  Year  Population - Sex: all - Age: all - Variant: estimates\n"," 0  Afghanistan  1950                                            7776182    \n"," 1  Afghanistan  1951                                            7879343    \n"," 2  Afghanistan  1952                                            7987783    \n"," 3  Afghanistan  1953                                            8096703    \n"," 4  Afghanistan  1954                                            8207953    ,\n","                        country country_code  year  health_exp  life_expect  \\\n"," 0                        Aruba          ABW  1999         NaN    73.561000   \n"," 1  Africa Eastern and Southern          AFE  1999         NaN    51.258874   \n"," 2                  Afghanistan          AFG  1999         NaN    54.846000   \n"," 3   Africa Western and Central          AFW  1999         NaN    49.726429   \n"," 4                       Angola          AGO  1999         NaN    45.386000   \n"," \n","    maternal_mortality  infant_mortality  neonatal_mortality  \\\n"," 0                 NaN               NaN                 NaN   \n"," 1                 NaN         88.285642           38.433841   \n"," 2                 NaN         94.600000           64.000000   \n"," 3                 NaN        101.541373           44.733554   \n"," 4                 NaN        123.500000           51.000000   \n"," \n","    under_5_mortality  prev_hiv  inci_tuberc  prev_undernourishment  \n"," 0                NaN       NaN          NaN                    NaN  \n"," 1         142.506373  6.684793          NaN                    NaN  \n"," 2         135.800000  0.100000          NaN                    NaN  \n"," 3         173.943151       NaN          NaN                    NaN  \n"," 4         208.000000  1.300000          NaN                    NaN  )"]},"execution_count":1,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","\n","# Load the uploaded files\n","population_file_path = '/kaggle/input/population-1950-to-2023-v6/population new v2 .csv'\n","health_file_path = '/kaggle/input/world-health-indicators-dataset/world_health_data.csv'\n","\n","population_long = pd.read_csv(population_file_path)\n","health_data = pd.read_csv(health_file_path)\n","\n","# Display first few rows of both datasets for inspection\n","population_long.head(), health_data.head()"]},{"cell_type":"markdown","id":"9c0ea7fb","metadata":{"papermill":{"duration":0.001998,"end_time":"2025-01-22T08:10:53.497448","exception":false,"start_time":"2025-01-22T08:10:53.49545","status":"completed"},"tags":[]},"source":["## Step 2: Data Preparation for Joining\n","To ensure compatibility between the two datasets:\n","\n","* The Year column in the reshaped population dataset is converted to an integer.\n","* The health dataset is filtered to include only data from 2014 onwards, aligning it with the population dataset."]},{"cell_type":"code","execution_count":2,"id":"1ceb63ce","metadata":{"execution":{"iopub.execute_input":"2025-01-22T08:10:53.503493Z","iopub.status.busy":"2025-01-22T08:10:53.503258Z","iopub.status.idle":"2025-01-22T08:10:53.509737Z","shell.execute_reply":"2025-01-22T08:10:53.509111Z"},"papermill":{"duration":0.010259,"end_time":"2025-01-22T08:10:53.510933","exception":false,"start_time":"2025-01-22T08:10:53.500674","status":"completed"},"tags":[]},"outputs":[],"source":["# Ensure 'Year' in population data is an integer\n","population_long['Year'] = population_long['Year'].astype(int)\n","\n","# Filter health data for years starting from 2014\n","health_data_filtered = health_data[health_data['year'] >= 1999]"]},{"cell_type":"markdown","id":"2177118d","metadata":{"papermill":{"duration":0.001879,"end_time":"2025-01-22T08:10:53.514895","exception":false,"start_time":"2025-01-22T08:10:53.513016","status":"completed"},"tags":[]},"source":["## Step 3: Merge the Datasets\n","The reshaped population dataset and filtered health dataset are merged on Country and Year. This ensures each row represents a country-year combination with its corresponding population and health indicators. The merge is performed using pd.merge() with an inner join to retain only matching records.\n","\n","After the merge, redundant columns (country and year) are dropped for a cleaner result."]},{"cell_type":"code","execution_count":3,"id":"c9445963","metadata":{"execution":{"iopub.execute_input":"2025-01-22T08:10:53.519796Z","iopub.status.busy":"2025-01-22T08:10:53.519596Z","iopub.status.idle":"2025-01-22T08:10:53.554242Z","shell.execute_reply":"2025-01-22T08:10:53.553147Z"},"papermill":{"duration":0.038721,"end_time":"2025-01-22T08:10:53.555679","exception":false,"start_time":"2025-01-22T08:10:53.516958","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["        Entity  Year  Population - Sex: all - Age: all - Variant: estimates  \\\n","0  Afghanistan  1999                                           19887791       \n","1  Afghanistan  2000                                           20130334       \n","2  Afghanistan  2001                                           20284303       \n","3  Afghanistan  2002                                           21378123       \n","4  Afghanistan  2003                                           22733054       \n","\n","  country_code  health_exp  life_expect  maternal_mortality  infant_mortality  \\\n","0          AFG         NaN       54.846                 NaN              94.6   \n","1          AFG         NaN       55.298              1346.0              92.0   \n","2          AFG         NaN       55.798              1273.0              89.3   \n","3          AFG    9.443391       56.454              1277.0              86.6   \n","4          AFG    8.941258       57.344              1196.0              83.7   \n","\n","   neonatal_mortality  under_5_mortality  prev_hiv  inci_tuberc  \\\n","0                64.0              135.8       0.1          NaN   \n","1                62.7              131.6       0.1        190.0   \n","2                61.5              127.4       0.1        189.0   \n","3                60.2              123.0       0.1        189.0   \n","4                58.9              118.5       0.1        189.0   \n","\n","   prev_undernourishment  \n","0                    NaN  \n","1                    NaN  \n","2                   46.0  \n","3                   43.7  \n","4                   38.6  \n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]}],"source":["# Perform the join using the country name and year\n","joined_data = pd.merge(\n","    population_long,\n","    health_data_filtered,\n","    how='inner',\n","    left_on=['Entity', 'Year'],\n","    right_on=['country', 'year']\n",")\n","\n","# Drop unnecessary columns after the join\n","joined_data = joined_data.drop(columns=['country', 'year'])\n","\n","# Display the result\n","print(joined_data.head())"]},{"cell_type":"markdown","id":"34bc33eb","metadata":{"papermill":{"duration":0.002252,"end_time":"2025-01-22T08:10:53.560563","exception":false,"start_time":"2025-01-22T08:10:53.558311","status":"completed"},"tags":[]},"source":["## Step 4: Save the Merged Dataset\n","The final merged dataset, combining population and health indicators for each country and year, is saved to a CSV file named World_Population_and_Health.csv for future use."]},{"cell_type":"code","execution_count":4,"id":"4852f37c","metadata":{"execution":{"iopub.execute_input":"2025-01-22T08:10:53.566143Z","iopub.status.busy":"2025-01-22T08:10:53.565912Z","iopub.status.idle":"2025-01-22T08:10:53.610067Z","shell.execute_reply":"2025-01-22T08:10:53.609358Z"},"papermill":{"duration":0.048669,"end_time":"2025-01-22T08:10:53.611643","exception":false,"start_time":"2025-01-22T08:10:53.562974","status":"completed"},"tags":[]},"outputs":[],"source":["joined_data.to_csv('World_Population_and_Health.csv', index=False)"]},{"cell_type":"markdown","id":"5cdbaf97","metadata":{"papermill":{"duration":0.002178,"end_time":"2025-01-22T08:10:53.616326","exception":false,"start_time":"2025-01-22T08:10:53.614148","status":"completed"},"tags":[]},"source":["This script effectively processes and combines two datasets, providing a consolidated view of population and health data. It demonstrates best practices in data manipulation and preparation for deeper analysis or visualization."]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"datasetId":6351620,"sourceId":10266662,"sourceType":"datasetVersion"},{"datasetId":6512904,"sourceId":10523291,"sourceType":"datasetVersion"},{"datasetId":6144912,"sourceId":9985325,"sourceType":"datasetVersion"}],"dockerImageVersionId":30839,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":3.915783,"end_time":"2025-01-22T08:10:54.035468","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-01-22T08:10:50.119685","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}