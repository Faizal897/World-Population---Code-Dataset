{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/faizalrosyid/world-population-code-dataset?scriptVersionId=218698938\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"a40f3d6b","metadata":{"papermill":{"duration":0.002651,"end_time":"2025-01-22T04:05:29.80697","exception":false,"start_time":"2025-01-22T04:05:29.804319","status":"completed"},"tags":[]},"source":["# World Population and Health Data Analysis\n","## Step 1: Load the Datasets\n","The script begins by importing the required library, pandas, for data manipulation and analysis. Two datasets are loaded:\n","\n","* Population Data: Contains population statistics from 2014 to 2024 for various countries.\n","* Health Data: Contains health-related indicators for multiple countries over several years.\n","\n","The datasets are loaded using pd.read_csv() and inspected with .head() to ensure the data structure is correctly loaded."]},{"cell_type":"code","execution_count":1,"id":"fdb8d91b","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-01-22T04:05:29.812836Z","iopub.status.busy":"2025-01-22T04:05:29.812527Z","iopub.status.idle":"2025-01-22T04:05:30.58208Z","shell.execute_reply":"2025-01-22T04:05:30.580973Z"},"papermill":{"duration":0.774073,"end_time":"2025-01-22T04:05:30.583482","exception":false,"start_time":"2025-01-22T04:05:29.809409","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]},{"data":{"text/plain":["(       Country       2014       2015       2016       2017       2018  \\\n"," 0  Afghanistan   56805036   58070279   59363704   60685938   62037623   \n"," 1      Albania  127571863  129443136  131341857  133268430  135223262   \n"," 2      Algeria  147582820  151776865  156090098  160525905  165087770   \n"," 3      Andorra  133274038  134398607  135532666  136676293  137829571   \n"," 4       Angola   35838921   36323701   36815040   37313024   37817745   \n"," \n","         2019       2020       2021       2022       2023       2024  \n"," 0   63419415   64831984   66276015   67752210   69261285   70803973  \n"," 1  137206769  139219371  141261494  143333572  145436043  147569355  \n"," 2  169779276  174604106  179566049  184669002  189916972  195314080  \n"," 3  138992580  140165403  141348122  142540821  143743584  144956495  \n"," 4   38329292   38847760   39373240   39905829   40445621   40992715  ,\n","                        country country_code  year  health_exp  life_expect  \\\n"," 0                        Aruba          ABW  1999         NaN    73.561000   \n"," 1  Africa Eastern and Southern          AFE  1999         NaN    51.258874   \n"," 2                  Afghanistan          AFG  1999         NaN    54.846000   \n"," 3   Africa Western and Central          AFW  1999         NaN    49.726429   \n"," 4                       Angola          AGO  1999         NaN    45.386000   \n"," \n","    maternal_mortality  infant_mortality  neonatal_mortality  \\\n"," 0                 NaN               NaN                 NaN   \n"," 1                 NaN         88.285642           38.433841   \n"," 2                 NaN         94.600000           64.000000   \n"," 3                 NaN        101.541373           44.733554   \n"," 4                 NaN        123.500000           51.000000   \n"," \n","    under_5_mortality  prev_hiv  inci_tuberc  prev_undernourishment  \n"," 0                NaN       NaN          NaN                    NaN  \n"," 1         142.506373  6.684793          NaN                    NaN  \n"," 2         135.800000  0.100000          NaN                    NaN  \n"," 3         173.943151       NaN          NaN                    NaN  \n"," 4         208.000000  1.300000          NaN                    NaN  )"]},"execution_count":1,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","\n","# Load the uploaded files\n","population_file_path = '/kaggle/input/global-population-dataset-20142024/population_by_year_2014_2024.csv'\n","health_file_path = '/kaggle/input/world-health-indicators-dataset/world_health_data.csv'\n","\n","population_data = pd.read_csv(population_file_path)\n","health_data = pd.read_csv(health_file_path)\n","\n","# Display first few rows of both datasets for inspection\n","population_data.head(), health_data.head()"]},{"cell_type":"markdown","id":"9ebb5b0e","metadata":{"papermill":{"duration":0.002202,"end_time":"2025-01-22T04:05:30.588292","exception":false,"start_time":"2025-01-22T04:05:30.58609","status":"completed"},"tags":[]},"source":["## Step 2: Reshape the Population Data\n","The population dataset is reshaped from a wide format to a long format. This allows each row to represent a unique combination of country and year, which is essential for merging with the health dataset. The melt() function is used, specifying:\n","\n","* id_vars=['Country'] to keep the country column fixed.\n","* var_name='Year' to create a new column for years.\n","* value_name='Population' to store population values."]},{"cell_type":"code","execution_count":2,"id":"1041bfb6","metadata":{"execution":{"iopub.execute_input":"2025-01-22T04:05:30.593806Z","iopub.status.busy":"2025-01-22T04:05:30.593559Z","iopub.status.idle":"2025-01-22T04:05:30.608134Z","shell.execute_reply":"2025-01-22T04:05:30.607427Z"},"papermill":{"duration":0.018824,"end_time":"2025-01-22T04:05:30.609454","exception":false,"start_time":"2025-01-22T04:05:30.59063","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["<bound method NDFrame.head of           Country  Year  Population\n","0     Afghanistan  2014    56805036\n","1         Albania  2014   127571863\n","2         Algeria  2014   147582820\n","3         Andorra  2014   133274038\n","4          Angola  2014    35838921\n","...           ...   ...         ...\n","2118    Venezuela  2024   134646099\n","2119      Vietnam  2024    60129454\n","2120        Yemen  2024   115413310\n","2121       Zambia  2024   190029590\n","2122     Zimbabwe  2024    14383543\n","\n","[2123 rows x 3 columns]>"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["# Reshape the population data to long format\n","population_long = population_data.melt(\n","    id_vars=['Country'],\n","    var_name='Year',\n","    value_name='Population'\n",")\n","\n","# Display unique countries and reshaped population data\n","population_long.head"]},{"cell_type":"markdown","id":"0f062819","metadata":{"papermill":{"duration":0.002374,"end_time":"2025-01-22T04:05:30.614428","exception":false,"start_time":"2025-01-22T04:05:30.612054","status":"completed"},"tags":[]},"source":["## Step 3: Data Preparation for Joining\n","To ensure compatibility between the two datasets:\n","\n","* The Year column in the reshaped population dataset is converted to an integer.\n","* The health dataset is filtered to include only data from 2014 onwards, aligning it with the population dataset."]},{"cell_type":"code","execution_count":3,"id":"ecef9467","metadata":{"execution":{"iopub.execute_input":"2025-01-22T04:05:30.61997Z","iopub.status.busy":"2025-01-22T04:05:30.619691Z","iopub.status.idle":"2025-01-22T04:05:30.626193Z","shell.execute_reply":"2025-01-22T04:05:30.625363Z"},"papermill":{"duration":0.010622,"end_time":"2025-01-22T04:05:30.627405","exception":false,"start_time":"2025-01-22T04:05:30.616783","status":"completed"},"tags":[]},"outputs":[],"source":["# Ensure 'Year' in population data is an integer\n","population_long['Year'] = population_long['Year'].astype(int)\n","\n","# Filter health data for years starting from 2014\n","health_data_filtered = health_data[health_data['year'] >= 2014]"]},{"cell_type":"markdown","id":"b038169c","metadata":{"papermill":{"duration":0.002145,"end_time":"2025-01-22T04:05:30.632103","exception":false,"start_time":"2025-01-22T04:05:30.629958","status":"completed"},"tags":[]},"source":["## Step 4: Merge the Datasets\n","The reshaped population dataset and filtered health dataset are merged on Country and Year. This ensures each row represents a country-year combination with its corresponding population and health indicators. The merge is performed using pd.merge() with an inner join to retain only matching records.\n","\n","After the merge, redundant columns (country and year) are dropped for a cleaner result."]},{"cell_type":"code","execution_count":4,"id":"7f7819fd","metadata":{"execution":{"iopub.execute_input":"2025-01-22T04:05:30.637546Z","iopub.status.busy":"2025-01-22T04:05:30.637287Z","iopub.status.idle":"2025-01-22T04:05:30.660464Z","shell.execute_reply":"2025-01-22T04:05:30.659442Z"},"papermill":{"duration":0.027501,"end_time":"2025-01-22T04:05:30.661936","exception":false,"start_time":"2025-01-22T04:05:30.634435","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["       Country  Year  Population country_code  health_exp  life_expect  \\\n","0  Afghanistan  2014    56805036          AFG    9.528878       62.545   \n","1      Albania  2014   127571863          ALB    6.434511       78.407   \n","2      Algeria  2014   147582820          DZA    6.547214       75.110   \n","3      Andorra  2014   133274038          AND    6.773080          NaN   \n","4       Angola  2014    35838921          AGO    2.434129       60.040   \n","\n","   maternal_mortality  infant_mortality  neonatal_mortality  \\\n","0               785.0              56.2                43.5   \n","1                 7.0               8.8                 5.9   \n","2                86.0              22.0                15.8   \n","3                 NaN               3.5                 1.9   \n","4               292.0              60.3                31.5   \n","\n","   under_5_mortality  prev_hiv  inci_tuberc  prev_undernourishment  \n","0               75.3       0.1        189.0                   19.3  \n","1                9.9       0.1         16.0                    4.5  \n","2               25.7       0.1         72.0                    2.7  \n","3                3.8       NaN          9.4                    NaN  \n","4               92.5       1.9        370.0                   13.0  \n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.10/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]}],"source":["# Perform the join using the country name and year\n","joined_data = pd.merge(\n","    population_long,\n","    health_data_filtered,\n","    how='inner',\n","    left_on=['Country', 'Year'],\n","    right_on=['country', 'year']\n",")\n","\n","# Drop unnecessary columns after the join\n","joined_data = joined_data.drop(columns=['country', 'year'])\n","\n","# Display the result\n","print(joined_data.head())"]},{"cell_type":"markdown","id":"c9eb2be0","metadata":{"papermill":{"duration":0.002297,"end_time":"2025-01-22T04:05:30.66684","exception":false,"start_time":"2025-01-22T04:05:30.664543","status":"completed"},"tags":[]},"source":["## Step 5: Save the Merged Dataset\n","The final merged dataset, combining population and health indicators for each country and year, is saved to a CSV file named World_Population_and_Health.csv for future use."]},{"cell_type":"code","execution_count":5,"id":"acd54f5c","metadata":{"execution":{"iopub.execute_input":"2025-01-22T04:05:30.672488Z","iopub.status.busy":"2025-01-22T04:05:30.672255Z","iopub.status.idle":"2025-01-22T04:05:30.693202Z","shell.execute_reply":"2025-01-22T04:05:30.692321Z"},"papermill":{"duration":0.025405,"end_time":"2025-01-22T04:05:30.694736","exception":false,"start_time":"2025-01-22T04:05:30.669331","status":"completed"},"tags":[]},"outputs":[],"source":["joined_data.to_csv('World_Population_and_Health.csv', index=False)"]},{"cell_type":"markdown","id":"c64aaa3e","metadata":{"papermill":{"duration":0.002452,"end_time":"2025-01-22T04:05:30.700282","exception":false,"start_time":"2025-01-22T04:05:30.69783","status":"completed"},"tags":[]},"source":["This script effectively processes and combines two datasets, providing a consolidated view of population and health data. It demonstrates best practices in data manipulation and preparation for deeper analysis or visualization."]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":6351620,"sourceId":10266662,"sourceType":"datasetVersion"},{"datasetId":6512904,"sourceId":10523291,"sourceType":"datasetVersion"}],"dockerImageVersionId":30839,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":3.946559,"end_time":"2025-01-22T04:05:31.119415","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-01-22T04:05:27.172856","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}